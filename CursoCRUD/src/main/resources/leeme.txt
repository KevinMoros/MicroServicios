Recurso: Curso.

Vamos a exponer un CRUD de Curso que está almacenado en una base de datos:

POST 	--> Insertar Curso.
DELETE	--> Eliminar Curso.
PUT  	--> Actualizar Libro.
GET		--> Recuperar Curso.
GET		--> Recuperar Curso por precio.


http://localhost:8080/cursos										POST: 	Dar de alta un curso del que paso los datos en el cuerpo en formato JSON.
http://localhost:8080/cursos/{codCurso}								DELETE:	Borrar el curso con el codCurso indicado en la url.
http://localhost:8080/cursos?codCurso=codCurso&duracion=duracion	PUT:  	Actualizar un curso del que paso los datos indicando el codCurso y la duración en la url.
http://localhost:8080/cursos/{codCurso}								GET:  	Recupera el curso a partir del codigo en la url.
http://localhost:8080/cursos?precio1=precioMin&precio2=precioMax	GET:  	Recupere el curso a partir de un precioMinimo y un precioMaximo en la url.
http://localhost:8080/cursos/{precioMin}/{precioMax}

ORGANIGRAMA DE LA CREACIÓN DEL PROYECTO:

1- Crear el proyecto e insertar las dependencias necesarias.
2- Definir el modelo de datos. (com.curso.model).
3- Crear la capa DAO (com.curso.dao).
	Crear interface que extends de JpaRepository<T, ID>.
	Donde T hace referencia la tipo de la entidad e ID hace referencia al tipo de la PK.
	Si se necesitan más métodos que los que están en JpaRepository se incorporan en:
		@Query("  ")
		tipoDevuelve metodo(tipoArg arg).
4- Capa de la lógica de negocio.(Capa de servicio). (com.curso.service).
 4.1 Crear la interface.
 4.2 Crear la clase que implemente esa interface.(No olvidar incluir @Service)y usar y declarar una variable de tipo Dao y anotarla
 	 con @Autowired.
5- Implementar el controlador(com.curso.controller). (No olvidar @RestController en la clase y @Autowired 'CursosService service').
6- Configuraciones (com.curso.inicio)
	6.1 En la clase lanzadora añadir los paquetes que tienen clases con anotaciones de spring.
	@EntityScan(basePackages = "com.curso.model") --> Paquete dónde está la entidad.
	@EnableJpaRepositories(basePackages = "com.curso.dao") --> Paquete dónde habilitamos la interface de Jpa.
	@SpringBootApplication(scanBasePackages = {"com.curso.controller","com.curso.service"})
	6.2 En el application.properties incorporar las propiedades necesarias para poder trabajar con la base de datos.